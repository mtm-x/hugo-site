<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Thamaraimanalan M - Portfolio</title><link>/</link><description>Recent content on Thamaraimanalan M - Portfolio</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Mon, 07 Oct 2024 00:00:00 +0000</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml"/><item><title>Droid Debloat</title><link>/projects/droid-debloat/</link><pubDate>Mon, 07 Oct 2024 00:00:00 +0000</pubDate><guid>/projects/droid-debloat/</guid><description>&lt;p&gt;A desktop app to safely remove bloatware from Android devices without needing root access. It connects via ADB and lets you uninstall those annoying pre-installed apps you can&amp;rsquo;t normally remove.&lt;/p&gt;
&lt;p&gt;Built with Qt Framework for a clean, user-friendly interface that works on Windows, Linux, and macOS. Free up storage, improve performance, and enhance privacy by getting rid of unnecessary system apps.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tech stack:&lt;/strong&gt; Qt Framework, C++, Android Debug Bridge (ADB)&lt;/p&gt;</description></item><item><title>Linux Kernel &amp; Device Drivers</title><link>/projects/linux-device-drivers/</link><pubDate>Mon, 07 Oct 2024 00:00:00 +0000</pubDate><guid>/projects/linux-device-drivers/</guid><description>&lt;p&gt;My journey into Linux kernel programming and device driver development. Learning how the kernel works under the hood - writing kernel modules, device drivers, and exploring system calls, memory management, and debugging techniques.&lt;/p&gt;
&lt;p&gt;Following the Pyjamabrah course taught by Google engineers Piyush Itankar and Mahmad Bharmal. The goal is to master kernel internals and contribute to the Linux kernel in the future.&lt;/p&gt;
&lt;p&gt;All my practice code and learning exercises are documented in the repo below.&lt;/p&gt;</description></item><item><title>Project.Eye - AI Assistive System</title><link>/projects/project-eye/</link><pubDate>Mon, 07 Oct 2024 00:00:00 +0000</pubDate><guid>/projects/project-eye/</guid><description>&lt;p&gt;An AI-powered assistive system that helps people who are blind navigate and understand their surroundings. It detects objects in real-time, understands scenes, and provides audio feedback about what&amp;rsquo;s around them.&lt;/p&gt;
&lt;p&gt;The system uses computer vision and machine learning to identify objects and describe the environment through voice assistance, making everyday navigation safer and more independent for users.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tech stack:&lt;/strong&gt; AI, Computer Vision, Machine Learning, Python, Deep Learning, Audio Processing&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/mtm-x/Project.Eye"&gt;View on GitHub&lt;/a&gt;&lt;/p&gt;</description></item><item><title>QT Communicator</title><link>/projects/qt-communicator/</link><pubDate>Mon, 07 Oct 2024 00:00:00 +0000</pubDate><guid>/projects/qt-communicator/</guid><description>&lt;p&gt;A modern chat application built with Qt Quick (QML) and C++. This project won 3rd place globally at Qt-athon 2024, competing against 100+ international teams and getting recognized by Qt Group.&lt;/p&gt;
&lt;p&gt;The app features a smooth, modern interface with real-time messaging, cross-platform support, and a high-performance C++ backend. It&amp;rsquo;s built following Qt best practices with clean architecture.&lt;/p&gt;
&lt;p&gt;üèÜ &lt;strong&gt;Qt Champion 2024 - 3rd Place Globally&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tech stack:&lt;/strong&gt; Qt Framework, QML, C++, Qt Network&lt;/p&gt;</description></item><item><title>Smart Traffic Management (STM)</title><link>/projects/smart-traffic-management/</link><pubDate>Mon, 07 Oct 2024 00:00:00 +0000</pubDate><guid>/projects/smart-traffic-management/</guid><description>&lt;p&gt;This project uses deep learning to detect ambulances in real-time and automatically controls traffic lights to clear their path. Built for the TechForSociety hackathon by Siemens and NASSCOM Foundation.&lt;/p&gt;
&lt;p&gt;The system runs on a Raspberry Pi and uses YOLO for computer vision. When it spots an ambulance, it immediately adjusts nearby traffic signals to create a priority lane - helping save lives by getting emergency vehicles to hospitals faster.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tech stack:&lt;/strong&gt; Python, IoT, Deep Learning (YOLO), Raspberry Pi, QML, Computer Vision&lt;/p&gt;</description></item><item><title>WiFi Jammer</title><link>/projects/wifi-jammer/</link><pubDate>Mon, 07 Oct 2024 00:00:00 +0000</pubDate><guid>/projects/wifi-jammer/</guid><description>&lt;p&gt;A network security tool for Linux that detects and jams WiFi access points. Originally built with Qt and Python, now being ported to QML and C++ for better performance.&lt;/p&gt;
&lt;p&gt;The app scans nearby WiFi networks and can jam specific access points through a clean Qt GUI. Currently migrating to C++ for improved efficiency, better UI responsiveness, and cleaner code.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;For educational and security testing purposes only&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tech stack:&lt;/strong&gt; Qt Framework, QML, C++, Python, Linux networking&lt;/p&gt;</description></item></channel></rss>